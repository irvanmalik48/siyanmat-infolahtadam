generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  directUrl         = env("DIRECT_URL")
}

model User {
  id       String  @id @default(uuid())
  email    String  @unique
  name     String?
  password String

  activityLogs ActivityLog[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Kegiatan {
  id           String    @id @default(uuid())
  namaKegiatan String
  tglKegiatan  DateTime
  peralatan    Peralatan @relation(fields: [idPeralatan], references: [id])
  idPeralatan  String
  waktuGuna    Int
  operator     String
  keterangan   String

  activityLogs ActivityLog[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Peralatan {
  id            String   @id @default(uuid())
  namaPeralatan String
  tglPengadaan  DateTime
  maksUsia      Int
  gambar        String?

  kegiatan Kegiatan[]

  activityLogs ActivityLog[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ActivityLog {
  id          String     @id @default(uuid())
  user        User       @relation(fields: [userId], references: [id])
  userId      String
  kegiatan    Kegiatan?  @relation(fields: [kegiatanId], references: [id])
  kegiatanId  String?
  peralatan   Peralatan? @relation(fields: [peralatanId], references: [id])
  peralatanId String?
  description String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}
